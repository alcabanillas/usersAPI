{
  "swagger": "2.0",
  "info": {
      "version": "1.0.0", 
      "title": "Users Project CRUD",
      "description": "My User Project Application API",
      "license": {
          "name": "MIT",
          "url": "https://opensource.org/licenses/MIT"
      }
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "Retrieve a list of JSONPlaceholder users.",
        "description": "Retrieve a list of users from JSONPlaceholder. Can be used to populate a list of fake users when prototyping or testing an API.",
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a JSONPlaceholder user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user's name.",
                    "example": "Leanne Graham*"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a single JSONPlaceholder user.",
        "description": "Retrieve a single JSONPlaceholder user. Can be used to populate a user profile when prototyping or testing an API.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "summary": "Delete a JSONPlaceholder user",
        "description": "Delete a JSONPlaceholder user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted user"
          }
        }
      }
    },
    "/users/{userId}": {
      "put" : {
        "summary":"Put a JSONPlaceholder user.",
        "description": "Change a JSONPlaceholder user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User changed"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The user ID.",
            "example": 0
          },
          "name": {
            "type": "string",
            "description": "The user's name.",
            "example": "Leanne Graham"
          }
        }
      }
    }
  },
  "tags": []
}
